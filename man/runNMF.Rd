% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dimension_reduction.R
\name{runNMF}
\alias{runNMF}
\title{Run Non-Negative Matrix Factorization}
\usage{
runNMF(
  gobject,
  spat_unit = NULL,
  feat_type = NULL,
  expression_values = c("normalized", "scaled", "custom"),
  reduction = c("cells", "feats"),
  name = NULL,
  feats_to_use = "hvf",
  return_gobject = TRUE,
  scale_unit = TRUE,
  k = 20,
  method = c("rcppml"),
  rev = FALSE,
  set_seed = TRUE,
  seed_number = 1234,
  verbose = TRUE,
  toplevel = 1L,
  ...
)
}
\arguments{
\item{gobject}{giotto object}

\item{spat_unit}{spatial unit (e.g. "cell")}

\item{feat_type}{feature type (e.g. "rna", "dna", "protein")}

\item{expression_values}{expression values to use}

\item{reduction}{"cells" or "feats"}

\item{name}{arbitrary name for NMF run}

\item{feats_to_use}{subset of features to use for NMF}

\item{return_gobject}{boolean: return giotto object (default = TRUE)}

\item{scale_unit}{scale features before NMF (default = TRUE)}

\item{k}{NMF rank (number of components to decompose into). Default is 20}

\item{method}{which implementation to use (only rcppml right now)}

\item{rev}{do a reverse NMF}

\item{set_seed}{use of seed}

\item{seed_number}{seed number to use}

\item{verbose}{verbosity of the function}

\item{toplevel}{relative stackframe where call was made}

\item{...}{additional parameters for NMF (see details)}
}
\value{
giotto object with updated NMF dimension reduction
}
\description{
Use NMF to perform dimension reduction.
}
\details{
See \code{\link[RcppML]{nmf}} for more information about other parameters.
}
\examples{
g <- GiottoData::loadGiottoMini("visium")
x <- runNMF(g, k = 20)
x <- runUMAP(x,
    dim_reduction_to_use = "nmf",
    dimensions_to_use = 1:20,
    name = "nmf_umap"
)
x <- createNearestNetwork(x,
    dim_reduction_to_use = "nmf",
    dim_reduction_name = "nmf",
    dimensions_to_use = 1:20
)
x <- doLeidenCluster(x, name = "nmf_leiden", network_name = "sNN.nmf")
plotUMAP(x, dim_reduction_name = "nmf_umap", cell_color = "nmf_leiden")
spatPlot2D(x, cell_color = "nmf_leiden")
}
